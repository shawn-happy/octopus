<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.github.octopus.sql.executor.plugin.doris.dao.DorisDDLDao">

    <update id="createDatabase">
        CREATE DATABASE IF NOT EXISTS `${database}`
    </update>

    <update id="dropDatabase">
        DROP DATABASE IF EXISTS `${database}`
    </update>

    <update id="createTable" parameterType="table">
        CREATE TABLE IF NOT EXISTS <if test="databaseName != null">`${databaseName}`.</if>`${tableName}`(
        <foreach item="item" index="index" collection="columnDefinitions"
                 separator=",">
            `${item.columnName}` ${item.fieldType}
            <if test="item.aggregateType != null">${item.aggregateType}</if>
            <if test="!item.isNullable()">NOT NULL</if>
            <if test="item.isAutoIncrement()">AUTO_INCREMENT</if>
            <if test="item.defaultValue != null">DEFAULT #{item.defaultValue}</if>
            <if test="item.comment != null">comment #{item.comment}</if>
        </foreach>
        <if test="indexDefinitions != null and !indexDefinitions.isEmpty()">
            ,
            <foreach item="item" index="index" collection="indexDefinitions"
                     separator=",">
                INDEX `${item.indexName}`
                <foreach collection="item.columns" item="column" index="index" open="(" close=")" separator=",">
                    `${column}`
                </foreach>
                <if test="item.algo != null">USING ${item.algo}</if>
                <if test="item.comment != null">comment #{item.comment}</if>
            </foreach>
        </if>
        ) engine = olap
        <if test="keyDefinition != null">
            ${keyDefinition.key}
            <foreach collection="keyDefinition.columns" item="column" index="index" open="(" separator="," close=")">
                `${column}`
            </foreach>
        </if>
        <if test="comment != null">
            COMMENT #{comment}
        </if>
        <if test="partitionDefinition != null">
            PARTITION BY RANGE
            <foreach collection="partitionDefinition.columns" item="column" index="index" open="(" separator=","
                     close=")">
                `${column}`
            </foreach>
            <if test="partitionDefinition.isLessThan()">
                <foreach collection="partitionDefinition.lessThanPartitions" item="partition" index="index" open="("
                         separator=","
                         close=")">
                    PARTITION `${partition.partitionName}` VALUES LESS THAN
                    <foreach collection="partition.maxValues" item="maxValue" index="index" open="(" separator=","
                             close=")">
                        #{maxValue}
                    </foreach>
                </foreach>
            </if>
            <if test="partitionDefinition.isFixedRange()">
                <foreach collection="partitionDefinition.fixedRangePartitions" item="partition" index="index" open="("
                         separator=","
                         close=")">
                    PARTITION `${partition.partitionName}` VALUES
                    [
                    <foreach collection="partition.lefts" index="index" item="left" open="(" separator="," close=")">
                        #{left}
                    </foreach>,
                    <foreach collection="partition.rights" index="index" item="right" open="(" separator="," close=")">
                        #{right}
                    </foreach>
                    )
                </foreach>
            </if>
            <if test="partitionDefinition.isDateMultiRange()">
                <foreach collection="partitionDefinition.dateMultiRangePartitions" item="partition" index="index"
                         open="("
                         separator=","
                         close=")">
                    FROM
                    <foreach collection="partition.from" item="from" index="index"
                             open="("
                             separator=","
                             close=")">
                        #{from}
                    </foreach>
                    TO
                    <foreach collection="partition.to" item="to" index="index"
                             open="("
                             separator=","
                             close=")">
                        #{to}
                    </foreach>
                    INTERVAL ${partition.interval} ${partition.type}
                </foreach>
            </if>
            <if test="partitionDefinition.isNumericMultiRange()">
                <foreach collection="partitionDefinition.numericMultiRangePartitions" item="partition" index="index"
                         open="("
                         separator=","
                         close=")">
                    FROM
                    <foreach collection="partition.from" item="from" index="index"
                             open="("
                             separator=","
                             close=")">
                        #{from}
                    </foreach>
                    TO
                    <foreach collection="partition.to" item="to" index="index"
                             open="("
                             separator=","
                             close=")">
                        #{to}
                    </foreach>
                    INTERVAL ${partition.interval}
                </foreach>
            </if>
        </if>
        DISTRIBUTED BY ${distributionDefinition.algo}
        <foreach collection="distributionDefinition.columns" item="column" index="index" open="(" separator=","
                 close=")">
            `${column}`
        </foreach>
        BUCKETS ${distributionDefinition.num}
    </update>

    <update id="renameTable">
        ALTER TABLE <if test="database != null">`${database}`.</if>`${oldTable}` RENAME `${newTable}`
    </update>

    <update id="modifyTableComment">
        ALTER TABLE <if test="database != null">`${database}`.</if>`${table}` MODIFY COMMENT #{comment}
    </update>

    <update id="dropTable">
        DROP TABLE IF EXISTS <if test="database != null">`${database}`.</if>`${table}`
    </update>

    <update id="addColumn" parameterType="table">
        ALTER TABLE <if test="databaseName != null">`${databaseName}`.</if>`${tableName}` ADD COLUMN
        <foreach item="item" index="index" collection="columnDefinitions" open="("
                 separator="," close=")">
            `${item.columnName}` ${item.fieldType}
            <if test="item.aggregateType != null">${item.aggregateType}</if>
            <if test="!item.isNullable()">NOT NULL</if>
            <if test="item.isAutoIncrement()">AUTO_INCREMENT</if>
            <if test="item.defaultValue != null">DEFAULT #{item.defaultValue}</if>
            <if test="item.comment != null">comment #{item.comment}</if>
        </foreach>
    </update>

    <update id="removeColumn">
        ALTER TABLE <if test="database != null">`${database}`.</if>`${table}` DROP COLUMN `${column}`
    </update>

    <update id="modifyColumn">
        ALTER TABLE <if test="database != null">`${database}`.</if>`${table}`
        MODIFY COLUMN `${column.columnName}` ${column.fieldType}
        <if test="column.aggregateType != null">${column.aggregateType}</if>
        <if test="!column.isNullable()">NOT NULL</if>
        <if test="column.isAutoIncrement()">AUTO_INCREMENT</if>
        <if test="column.defaultValue != null">DEFAULT #{column.defaultValue}</if>
        <if test="column.comment != null">comment #{column.comment}</if>
    </update>

    <update id="renameColumn">
        ALTER TABLE <if test="database != null">`${database}`.</if>`${table}` RENAME COLUMN `${oldColumn}` `${newColumn}`
    </update>

    <update id="modifyColumnComment">
        ALTER TABLE <if test="database != null">`${database}`.</if>`${table}` MODIFY COLUMN `${column}` COMMENT #{comment}
    </update>

    <update id="createIndex">
        CREATE INDEX IF NOT EXISTS `${index.indexName}` ON <if test="database != null">`${database}`.</if>`${table}`
        <foreach collection="index.columns" item="column" index="index" open="(" separator="," close=")">
            `${column}`
        </foreach>
        <if test="index.algo != null">USING ${index.algo}</if>
        <if test="index.comment != null">COMMENT #{index.comment}</if>
    </update>

    <update id="dropIndex">
        DROP INDEX IF EXISTS `${index}` ON <if test="database != null">`${database}`.</if>`${table}`
    </update>

    <update id="executeSQL">
        ${sql}
    </update>

</mapper>
