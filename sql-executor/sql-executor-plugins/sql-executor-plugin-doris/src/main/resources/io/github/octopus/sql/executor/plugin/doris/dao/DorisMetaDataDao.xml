<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.github.octopus.sql.executor.plugin.doris.dao.DorisMetaDataDao">

    <sql id="SYS_SCHEMAS">
        not in ('information_schema', '__internal_schema')
    </sql>

    <select id="getDatabaseMetas" resultType="databaseMeta">
        select `schema_name` as `name`,
        `default_character_set_name` as `characterSet`,
        `default_collation_name` as `collation`
        from `information_schema`.`SCHEMATA`
        where `SCHEMA_NAME`
        <include refid="SYS_SCHEMAS"/>
    </select>

    <select id="getDatabaseMetaByDatabase" parameterType="java.lang.String" resultType="databaseMeta">
        select `schema_name`                as `name`,
               `default_character_set_name` as `characterSet`,
               `default_collation_name`     as `collation`
        from `information_schema`.`SCHEMATA`
        where `SCHEMA_NAME` = #{database}
    </select>

    <select id="getTableMetas" resultType="tableMeta">
        select `TABLE_SCHEMA` as `database`,
        `TABLE_NAME` as `table`,
        `ENGINE`,
        `TABLE_ROWS` as `row_number`,
        `DATA_LENGTH` as `row_size`,
        `CREATE_TIME`,
        `UPDATE_TIME`,
        `TABLE_COMMENT` as `comment`
        from `information_schema`.`TABLES` where `TABLE_SCHEMA`
        <include refid="SYS_SCHEMAS"/>
        and `engine` is not null
    </select>

    <select id="getTableMetasByDatabases" resultType="tableMeta">
        select `TABLE_SCHEMA`  as `database`,
               `TABLE_NAME`    as `table`,
               `ENGINE`,
               `TABLE_ROWS`    as `row_number`,
               `DATA_LENGTH`   as `row_size`,
               `CREATE_TIME`,
               `UPDATE_TIME`,
               `TABLE_COMMENT` as `comment`
        from `information_schema`.`TABLES`
        where `TABLE_SCHEMA` in
        <foreach collection="databases" item="database" open="(" close=")" separator=",">
            #{database}
        </foreach>
          and `engine` is not null
    </select>

    <select id="getTableMetasByDatabaseAndSchema" resultType="tableMeta" parameterType="java.lang.String">
        select `TABLE_SCHEMA`  as `database`,
               `TABLE_NAME`    as `table`,
               `ENGINE`,
               `TABLE_ROWS`    as `row_number`,
               `DATA_LENGTH`   as `row_size`,
               `CREATE_TIME`,
               `UPDATE_TIME`,
               `TABLE_COMMENT` as `comment`
        from `information_schema`.`TABLES`
        where `TABLE_SCHEMA` = #{database}
          and `engine` is not null
    </select>

    <select id="getTableMetasByDatabaseAndSchemaAndTable" resultType="tableMeta">
        select `TABLE_SCHEMA`  as `database`,
               `TABLE_NAME`    as `table`,
               `ENGINE`,
               `TABLE_ROWS`    as `row_number`,
               `DATA_LENGTH`   as `row_size`,
               `CREATE_TIME`,
               `UPDATE_TIME`,
               `TABLE_COMMENT` as `comment`
        from `information_schema`.`TABLES`
        where `TABLE_SCHEMA` = #{database}
          and `TABLE_NAME` = #{table}
          and `engine` is not null
    </select>

    <select id="getColumnMetas" resultType="columnMeta">
        select `TABLE_SCHEMA` as `database`,
        `TABLE_NAME` as `table`,
        `COLUMN_NAME` as `column`,
        `COLUMN_DEFAULT` as `default_value`,
        `IS_NULLABLE` as `nullable`,
        `DATA_TYPE`,
        `CHARACTER_MAXIMUM_LENGTH` as `length`,
        `NUMERIC_PRECISION` as `percision`,
        `NUMERIC_SCALE` as `scale`,
        `DATETIME_PRECISION` as `time_precision`,
        `COLUMN_TYPE`,
        `COLUMN_COMMENT` as `comment`
        from `information_schema`.`COLUMNS`
        where `TABLE_SCHEMA`
        <include refid="SYS_SCHEMAS"/>
    </select>

    <select id="getColumnMetasByDatabaseAndSchema" resultType="columnMeta">
        select `TABLE_SCHEMA`             as `database`,
               `TABLE_NAME`               as `table`,
               `COLUMN_NAME`              as `column`,
               `COLUMN_DEFAULT`           as `default_value`,
               `IS_NULLABLE`              as `nullable`,
               `DATA_TYPE`,
               `CHARACTER_MAXIMUM_LENGTH` as `length`,
               `NUMERIC_PRECISION`        as `percision`,
               `NUMERIC_SCALE`            as `scale`,
               `DATETIME_PRECISION`       as `time_precision`,
               `COLUMN_TYPE`,
               `COLUMN_COMMENT`           as `comment`
        from `information_schema`.`COLUMNS`
        where `TABLE_SCHEMA` = #{database}
    </select>

    <select id="getColumnMetasByDatabaseAndSchemaAndTable" resultType="columnMeta">
        select `TABLE_SCHEMA`             as `database`,
               `TABLE_NAME`               as `table`,
               `COLUMN_NAME`              as `column`,
               `COLUMN_DEFAULT`           as `default_value`,
               `IS_NULLABLE`              as `nullable`,
               `DATA_TYPE`,
               `CHARACTER_MAXIMUM_LENGTH` as `length`,
               `NUMERIC_PRECISION`        as `percision`,
               `NUMERIC_SCALE`            as `scale`,
               `DATETIME_PRECISION`       as `time_precision`,
               `COLUMN_TYPE`,
               `COLUMN_COMMENT`           as `comment`
        from `information_schema`.`COLUMNS`
        where `TABLE_SCHEMA` = #{database}
          and `TABLE_NAME` = #{table}
    </select>

    <select id="getColumnMetasByDatabaseAndSchemaAndTableAndColumn" resultType="columnMeta">
        select `TABLE_SCHEMA`             as `database`,
               `TABLE_NAME`               as `table`,
               `COLUMN_NAME`              as `column`,
               `COLUMN_DEFAULT`           as `default_value`,
               `IS_NULLABLE`              as `nullable`,
               `DATA_TYPE`,
               `CHARACTER_MAXIMUM_LENGTH` as `length`,
               `NUMERIC_PRECISION`        as `percision`,
               `NUMERIC_SCALE`            as `scale`,
               `DATETIME_PRECISION`       as `time_precision`,
               `COLUMN_TYPE`,
               `COLUMN_COMMENT`           as `comment`
        from `information_schema`.`COLUMNS`
        where `TABLE_SCHEMA` = #{database}
          and `TABLE_NAME` = #{table}
          and `COLUMN_NAME` = #{column}
    </select>

    <select id="getConstraintMetas" resultType="constraintKeyMeta">
        SELECT tc.`CONSTRAINT_NAME` as `name`,
               tc.`CONSTRAINT_TYPE` as `type`,
               kcu.`COLUMN_NAME`    as `column`,
               kcu.`TABLE_SCHEMA`   as `schema`,
               kcu.`TABLE_NAME`     as `table`
        FROM `information_schema`.`TABLE_CONSTRAINTS` tc
                 left join `information_schema`.`KEY_COLUMN_USAGE` kcu
                           on tc.`TABLE_SCHEMA`` = kcu.`TABLE_SCHEMA`` and tc.`TABLE_NAME` = kcu.`TABLE_NAME`
    </select>

    <select id="getConstraintMetasByDatabaseAndSchema" resultType="constraintKeyMeta">
        SELECT tc.`CONSTRAINT_NAME` as `name`,
               tc.`CONSTRAINT_TYPE` as `type`,
               kcu.`COLUMN_NAME`    as `column`,
               kcu.`TABLE_SCHEMA`   as `schema`,
               kcu.`TABLE_NAME`     as `table`
        FROM `information_schema`.`TABLE_CONSTRAINTS` tc
                 left join `information_schema`.`KEY_COLUMN_USAGE` kcu
                           on tc.`TABLE_SCHEMA`` = kcu.`TABLE_SCHEMA`` and tc.`TABLE_NAME` = kcu.`TABLE_NAME`
        WHERE tc.`TABLE_SCHEMA` = #{database}
    </select>

    <select id="getConstraintMetasByDatabaseAndSchemaAndTable" resultType="constraintKeyMeta">
        SELECT tc.`CONSTRAINT_NAME` as `name`,
               tc.`CONSTRAINT_TYPE` as `type`,
               kcu.`COLUMN_NAME`    as `column`,
               kcu.`TABLE_SCHEMA`   as `schema`,
               kcu.`TABLE_NAME`     as `table`
        FROM `information_schema`.`TABLE_CONSTRAINTS` tc
                 left join `information_schema`.`KEY_COLUMN_USAGE` kcu
                           on tc.`TABLE_SCHEMA`` = kcu.`TABLE_SCHEMA`` and tc.`TABLE_NAME` = kcu.`TABLE_NAME`
        WHERE tc.`TABLE_SCHEMA` = #{database}
          and tc.`TABLE_NAME` = #{table};
    </select>
</mapper>
