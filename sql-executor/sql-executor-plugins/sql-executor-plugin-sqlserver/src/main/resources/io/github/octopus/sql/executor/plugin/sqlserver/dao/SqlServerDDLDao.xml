<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.github.octopus.sql.executor.plugin.sqlserver.dao.SqlServerDDLDao">

    <update id="createDatabase">
        IF NOT EXISTS (SELECT 1 FROM sys.databases WHERE name = '${database}')
        BEGIN
            CREATE DATABASE ${database};
        END
    </update>

    <update id="dropDatabase">
        IF EXISTS (SELECT 1 FROM sys.databases WHERE name = '${database}')
        BEGIN
            DROP DATABASE ${database};
        END
    </update>

    <update id="createSchema">
        use ${database};
        GO
        IF NOT EXISTS (SELECT 1 FROM sys.schemas WHERE name = '${schema}')
        BEGIN
            CREATE SCHEMA ${schema};
        END
    </update>

    <update id="dropSchema">
        use ${database};
        GO
        IF EXISTS (SELECT 1 FROM sys.schemas WHERE name = '${schema}')
        BEGIN
            DROP SCHEMA ${schema};
        END
    </update>

    <update id="createTable" parameterType="table">
        IF OBJECT_ID('${databaseName}.${schemaName}.${tableName}', 'U') IS NULL
        BEGIN
        CREATE TABLE <if test="databaseName != null">${databaseName}.</if>${schemaName}.${tableName}(
        <foreach item="item" index="index" collection="columnDefinitions"
                 separator=",">
            ${item.columnName} ${item.fieldType}
            <if test="item.isAutoIncrement()">IDENTITY(1, 1)</if>
            <if test="!item.isNullable()">NOT NULL</if>
            <if test="item.defaultValue != null">DEFAULT '${item.defaultValue}'</if>
        </foreach>
        <if test="primaryKey != null">
            ,
            CONSTRAINT ${primaryKey.primaryKeyName} PRIMARY KEY
            <foreach collection="primaryKey.columns" item="item" index="index" open="(" close=")" separator=",">
                ${item}
            </foreach>
        </if>
        <if test="constraintDefinitions != null">
            ,
            <foreach collection="constraintDefinitions" item="constraint" index="index"
                     separator=",">
                CONSTRAINT ${constraint.name} ${constraint.type}
                <foreach collection="constraint.constraints" index="index" item="expr" open="(" separator="," close=")">
                    ${expr}
                </foreach>
            </foreach>
        </if>
        );
        <if test="comment != null">
            EXEC ${databaseName}.sys.sp_addextendedproperty 'MS_Description', N'${comment}', 'schema', N'${schemaName}',
            'table', N'${tableName}';
        </if>
        <foreach item="item" index="index" collection="columnDefinitions"
                 separator=";">
            <if test="item.comment != null">EXEC ${databaseName}.sys.sp_addextendedproperty 'MS_Description',
                N'${item.comment}', 'schema', N'${schemaName}', 'table', N'${tableName}', 'column',
                N'${item.columnName}'
            </if>
        </foreach>
        END
    </update>

    <update id="renameTable">
        EXEC sp_rename '
        <if test="database != null">${database}.</if>
        <if test="schema != null">${schema}.</if>${oldTable}', '
        <if test="database != null">${database}.</if>
        <if test="schema != null">${schema}.</if>${newTable}'
    </update>

    <update id="modifyTableComment">
        EXEC ${database}.sys.sp_addextendedproperty 'MS_Description', N'${comment}', 'schema', N'${schema}', 'table', N'${table}'
    </update>

    <update id="dropTable">
        DROP TABLE IF EXISTS
        <if test="database != null">${database}.</if>
        <if test="schema != null">${schema}.</if>${table}
    </update>

    <update id="addColumn" parameterType="table">
        ALTER TABLE
        <if test="databaseName != null">${databaseName}.</if>
        <if test="schemaName != null">${schemaName}.</if>${tableName}
        <foreach item="item" index="index" collection="columnDefinitions"
                 separator=",">
            ADD ${item.columnName} ${item.fieldType}
            <if test="item.isAutoIncrement()">IDENTITY(1,1)</if>
            <if test="!item.isNullable()">NOT NULL</if>
            <if test="item.defaultValue != null">DEFAULT #{item.defaultValue}</if>
        </foreach>
        ;
        <foreach item="item" index="index" collection="columnDefinitions"
                 separator=";">
            <if test="item.comment != null">
                EXEC ${databaseName}.sys.sp_addextendedproperty 'MS_Description',
                N'${item.comment}', 'schema', N'${schemaName}', 'table', N'${tableName}', 'column',
                N'${item.columnName}'
            </if>
        </foreach>
    </update>

    <update id="removeColumn">
        ALTER TABLE <if test="database != null">${database}.</if><if test="schema != null">${schema}.</if>${table} DROP COLUMN ${column}
    </update>

    <update id="modifyColumn">
        ALTER TABLE <if test="database != null">${database}.</if>${table}
        ALTER COLUMN ${column.columnName} ${column.fieldType}
        <if test="column.isAutoIncrement()">AUTO_INCREMENT</if>
        <if test="!column.isNullable()">NOT NULL</if>
        <if test="column.defaultValue != null">DEFAULT #{column.defaultValue}</if>
        <if test="column.comment != null">
            ;
            EXEC ${database}.sys.sp_addextendedproperty 'MS_Description',
            N'${column.comment}', 'schema', N'${schema}', 'table', N'${table}', 'column',
            N'${column.columnName}'
        </if>
    </update>

    <update id="renameColumn">
        EXEC sp_rename '
        <if test="database != null">${database}.</if>
        <if test="schema != null">${schema}.</if>${table}.${oldColumn}', '
        <if test="database != null">${database}.</if>
        <if test="schema != null">${schema}.</if>${table}.${newColumn}', 'COLUMN';
    </update>

    <update id="createIndex">
        CREATE INDEX ${index.indexName} ON
        <if test="database != null">${database}.</if>
        <if test="schema != null">${schema}.</if>${table}
        <foreach collection="index.columns" item="column" index="index" open="(" separator="," close=")">
            ${column}
        </foreach>
    </update>

    <update id="dropIndex">
        DROP INDEX ${index} ON <if test="database != null">${database}.</if>
        <if test="schema != null">${schema}.</if>${table}}
    </update>

    <update id="executeSQL">
        ${sql}
    </update>

</mapper>
