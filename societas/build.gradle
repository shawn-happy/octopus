plugins {
    id 'base'
    id 'com.diffplug.spotless'
    id 'org.springframework.boot' apply false
}

repositories {
    repositories {
        maven {
            url "https://maven.aliyun.com/repository/public"
        }
        mavenLocal()
        mavenCentral()
    }

}

ext {
    mysqlConnectorVersion = '8.0.21'
    lombokVersion = '1.18.10'
    junitVersion = '5.7.0'
    jacksonVersion = '2.12.5'
    icebergVersion = '0.14.1'
    sparkVersion = '3.2.2'
    aviatorVersion = '5.3.2'
    commonCollections4Version = '4.4'
    commonLang3Version = '3.12.0'
    commonsIOVersion = '2.11.0'
    guavaVersion = '31.1-jre'
    annotationVersion = '20.1.0'
    slf4jVersion = '1.7.30'
    log4jVersion = '2.17.1'
    springbootVersion = '2.5.4'

    libs_guava = [group: 'com.google.guava', name: 'guava', version: guavaVersion]
    libs_commonsCollections4 = [group: 'org.apache.commons', name: 'commons-collections4', version: commonCollections4Version]
    libs_commonsLang3 = [group: 'org.apache.commons', name: 'commons-lang3', version: commonLang3Version]
    libs_commonsIO = [group: 'commons-io', name: 'commons-io', version: commonsIOVersion]
    libs_lombok = [group: 'org.projectlombok', name: 'lombok', version: lombokVersion]
    libs_jetbrainsAnnotation = [group: 'org.jetbrains', name: 'annotations', version: annotationVersion]
    libs_slf4jApi = [group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion]
    libs_log4jSlf4jImpl = [group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: log4jVersion]


    libs_mysqlConnector = [group: 'mysql', name: 'mysql-connector-java', version: mysqlConnectorVersion]
    libs_jacksonDatabind = [group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion]
    libs_jacksonCore = [group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: jacksonVersion]
    libs_jacksonAnnotations = [group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jacksonVersion]
    libs_jacksonDatatypeJsr310 = [group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: jacksonVersion]
    libs_jacksonDataformatYaml = [group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: jacksonVersion]
    libs_aviator = [group: 'com.googlecode.aviator', name: 'aviator', version: aviatorVersion]

    libs_icebergSparkRuntime = [group: 'org.apache.iceberg', name: 'iceberg-spark-runtime-3.2_2.12', version: icebergVersion]
    libs_sparkSql = [group: 'org.apache.spark', name: 'spark-sql_2.12', version: sparkVersion]
    libs_sparkGraphx = [group: 'org.apache.spark', name: 'spark-graphx_2.12', version: sparkVersion]

    libs_junitJupiterApi = [group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitVersion]
    libs_junitJupiterEngine = [group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitVersion]

    // spring boot
    libs_springboot = [group: 'org.springframework.boot', name: 'spring-boot', version: springbootVersion]
    libs_springbootStarter = [group: 'org.springframework.boot', name: 'spring-boot-starter', version: springbootVersion]
    libs_springbootCache = [group: 'org.springframework.boot', name: 'spring-boot-starter-cache', version: springbootVersion]
    libs_springbootJdbc = [group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: springbootVersion]
    libs_springbootLog4j2 = [group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: springbootVersion]
    libs_springbootAutoConf = [group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: springbootVersion]
    libs_springbootSecurity = [group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: springbootVersion]
    libs_springbootJpa = [group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: springbootVersion]
    libs_springbootQuartz = [group: 'org.springframework.boot', name: 'spring-boot-starter-quartz', version: springbootVersion]
    libs_springbootRedis = [group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: springbootVersion]
    libs_springbootRedisIntegration = [group: 'org.springframework.integration', name: 'spring-integration-redis', version: springIntegrationVersion]
    libs_springbootTest = [group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springbootVersion]
    libs_springbootTestAutoConf = [group: 'org.springframework.boot', name: 'spring-boot-test-autoconfigure', version: springbootVersion]
    libs_springbootConfProcessor = [group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: springbootVersion]
    libs_springbootLogging = [group: 'org.springframework.boot', name: 'spring-boot-starter-logging', version: springbootVersion]
    libs_springbootWeb = [group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springbootVersion]
    libs_springbootAop = [group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: springbootVersion]
    libs_springbootActuator = [group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: springbootVersion]

    coverageExclusions = [
            '**/Proto*.java',
            '**/**Proto.java',
            '**/**VM.java',
            '**/dto/**.java',
            '**/domain/**.java',
            '**/enums/**.java',
            '**/**Controller.java',
            '**/**Repository.java'
    ]
}

allprojects {
    group 'com.octopus'
    version '1.0-SNAPSHOT'

    repositories {
        maven {
            url "https://maven.aliyun.com/repository/public"
        }
        mavenLocal()
        mavenCentral()
    }

}

subprojects {
    apply plugin: "java"
    apply plugin: 'groovy'
    apply plugin: 'com.diffplug.spotless'

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    repositories {
        repositories {
            maven {
                url "https://maven.aliyun.com/repository/public"
            }
            mavenCentral()
            mavenLocal()
        }
    }

    sourceSets {
        main {
            java {
                srcDir 'src/main/java'
            }
        }
    }

    task sourcesJar(type: Jar) {
        classifier "sources"
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar) {
        classifier "javadoc"
        from javadoc
    }

    spotless {
        java {
            importOrder()
            removeUnusedImports()
            toggleOffOn("@formatter:off", "@formatter:on")
            googleJavaFormat('1.7')
            target '**/*.java'
        }
    }
}

wrapper {
    gradleVersion = '7.5'
}